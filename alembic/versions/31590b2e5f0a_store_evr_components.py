"""Store evr components separately

Revision ID: 31590b2e5f0a
Revises: c9c6e92946b
Create Date: 2014-07-29 14:25:08.555357

"""

# revision identifiers, used by Alembic.
revision = '31590b2e5f0a'
down_revision = 'c9c6e92946b'

from alembic import op
import sqlalchemy as sa

deptable = sa.Table(
        'dependency',
        sa.MetaData(),
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('evr', sa.String),
        sa.Column('epoch', sa.Integer),
        sa.Column('version', sa.String),
        sa.Column('release', sa.String)
        )

chngtable = sa.Table(
        'dependency_change',
        sa.MetaData(),
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('dep_name', sa.String),
        sa.Column('prev_dep_evr', sa.String),
        sa.Column('curr_dep_evr', sa.String),
        sa.Column('prev_epoch', sa.Integer),
        sa.Column('prev_version', sa.String),
        sa.Column('prev_release', sa.String),
        sa.Column('curr_epoch', sa.Integer),
        sa.Column('curr_version', sa.String),
        sa.Column('curr_release', sa.String)
        )
def con_evr(evr):
    if not evr:
        return None, None, None
    epoch, rest = None, evr
    if ':' in evr:
        epoch, _, rest = evr.partition(':')
    version, _, release = rest.partition('-')
    return int(epoch) if epoch else None, version, release

def upgrade():
    conn = op.get_bind()
    op.add_column('dependency', sa.Column('epoch', sa.Integer(), nullable=True))
    op.add_column('dependency', sa.Column('version', sa.String(), nullable=True))
    op.add_column('dependency', sa.Column('release', sa.String(), nullable=True))
    for dep in conn.execute(deptable.select()):
        epoch, version, release = con_evr(dep.evr)
        conn.execute(deptable.update()
                .where(deptable.c.id == dep.id)
                .values(epoch=epoch, version=version, release=release))

    op.alter_column('dependency', u'version', nullable=False)
    op.alter_column('dependency', u'release', nullable=False)
    op.drop_column('dependency', u'evr')
    op.add_column('dependency_change', sa.Column('curr_epoch', sa.Integer(), nullable=True))
    op.add_column('dependency_change', sa.Column('curr_version', sa.String(), nullable=True))
    op.add_column('dependency_change', sa.Column('curr_release', sa.String(), nullable=True))
    op.add_column('dependency_change', sa.Column('prev_epoch', sa.Integer(), nullable=True))
    op.add_column('dependency_change', sa.Column('prev_version', sa.String(), nullable=True))
    op.add_column('dependency_change', sa.Column('prev_release', sa.String(), nullable=True))
    for chng in conn.execute(chngtable.select()):
        prev_epoch, prev_version, prev_release = con_evr(chng.prev_dep_evr)
        curr_epoch, curr_version, curr_release = con_evr(chng.curr_dep_evr)
        conn.execute(chngtable.update()
                .where(chngtable.c.id == chng.id)
                .values(prev_epoch=prev_epoch, prev_version=prev_version,
                    prev_release=prev_release, curr_epoch=curr_epoch,
                    curr_version=curr_version, curr_release=curr_release,
                    ))
    op.drop_column('dependency_change', u'prev_dep_evr')
    op.drop_column('dependency_change', u'curr_dep_evr')


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dependency_change', sa.Column(u'curr_dep_evr', sa.VARCHAR(), nullable=True))
    op.add_column('dependency_change', sa.Column(u'prev_dep_evr', sa.VARCHAR(), nullable=True))
    op.drop_column('dependency_change', 'curr_version')
    op.drop_column('dependency_change', 'prev_version')
    op.drop_column('dependency_change', 'prev_epoch')
    op.drop_column('dependency_change', 'curr_release')
    op.drop_column('dependency_change', 'prev_release')
    op.drop_column('dependency_change', 'curr_epoch')
    op.add_column('dependency', sa.Column(u'evr', sa.VARCHAR(), nullable=False))
    op.drop_column('dependency', 'version')
    op.drop_column('dependency', 'epoch')
    op.drop_column('dependency', 'release')
    ### end Alembic commands ###
